def start_reply():
    return (
        'Привет! Я бот, который отвечает на ваши вопросы. Просто напишите что-нибудь!'
    )

def set_context_msg():
    return (
        f"Введите число последних сохраняемых в диалоге сообщений*\n"
        f"*/context 5* (для пяти)"
    )

def about_context_msg():
    return (
        '*Почему отправление большого контекста сообщений в ChatGPT стоит дороже с каждым сообщением?*\n'
        '\n*Объем данных и вычислений:*\nЧем больше текста отправляется, тем больше ресурсов требует его обработка. Модель должна учитывать весь предыдущий контекст, что увеличивает затраты на память и вычислительную мощность.\n'
        '*Сложность запросов:*\nС каждой новой итерацией контекст становится более сложным, что требует дополнительного времени и ресурсов для генерации ответа.\n'
        '*Оптимизация процессов:*\nОбработка больших объемов информации требует более сложных алгоритмов и оптимизаций, что тоже сказывается на стоимости.\n'
        '*Как на это можно повлиять*\n'
        'Вы можете указать количество запоминаемых сообщений в диалоге с помощью команды *context [x]*, где *[x]* - количество запоминаемых сообщений.\n'
        'Команда *clear_context* отчистит историю контекста (историю отправленных боту сообщений).'
    )

def balance_over():
    return (
        f"К сожалению, ваш баланс *(/balance)* меньше 0\n"
        f"Если вы хотите дальше пользоваться ботом (за оплату):"
        f'Можете написать создателю @hohohaha22.'
        f'Оплата будет с небольшой надбавкой (совсем не большой)'
        f'С неё я не куплю дом и машину :)'
        f'Зато смогу добавить разницу для оплаты сервера'
        f'Благодарю за интерес, проявленный к боту'
        f'Надеюсь, что он вам помог :)'
    )